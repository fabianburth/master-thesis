% This file was created with Citavi 6.14.0.0

@article{,
 abstract = {Context

Application Lifecycle Management (ALM) is a paradigm for integrating and managing the various activities related to the governance, development and maintenance of software products. In the last decade, several ALM tools have been proposed to support this process, and an increasing number of companies have started to adopt ALM.

Objective

We aim to investigate the impact of adopting ALM in a real industrial context to understand and justify both the benefits and obstacles of applying integrated ALM.

Method

As a research methodology, we apply action research that we have carried out within HAVELSAN, a large-scale IT company. The research was carried out over a period of seven years starting in 2010 when the ALM initiative has been started in the company to increase productivity and decrease maintenance costs.

Results

The paper presents the results of the action research that includes the application of ALM practices. The transitions among the different steps are discussed in detail, together with the identified obstacles, benefits and lessons learned.

Conclusions

Our seven-year study shows that the adoption of ALM processes is not trivial and its success is related to many factors. An important conclusion is that a piecemeal solution as provided by ALM 1.0 is not feasible for the complex process and tool integration problems of large enterprises. Hence the transition to ALM 2.0 was found necessary to cope with the organizational and business needs. Although ALM 2.0 appeared to be a more mature ALM approach, there are still obstacles that need attention from both researchers and practitioners.},
 author = {{Eray T{\"u}z{\"u}n} and {Bedir Tekinerdogan} and {Yagup Macit} and {K{\"u}r{\c{s}}at {\.{I}}nce}},
 year = {2019},
 title = {Adopting integrated application lifecycle management within a large-scale software company: An action research approach},
 url = {https://www.sciencedirect.com/science/article/pii/S0164121218302565},
 keywords = {Action research;Application lifecycle management;Application lifecycle management transformation;Change management;DevOps},
 pages = {63--82},
 volume = {149},
 issn = {0164-1212},
 journal = {Journal of Systems and Software},
 doi = {10.1016/j.jss.2018.11.021}
}


@misc{CPESpec,
 title = {Common platform enumeration: naming specification version 2.3},
 url = {https://nvlpubs.nist.gov/nistpubs/Legacy/IR/nistir7695.pdf},
 urldate = {11.08.2022},
 author = {{National Institute of Standards and Technology}},
 file = {Naming Specification Version 2:Attachments/Naming Specification Version 2.pdf:application/pdf}
}


@article{ExecutiveOrderSBOM,
 abstract = {By the authority vested in me as President by the Constitution and the laws of the United States of America, it~is~hereby ordered as follows:Section~1.},
 author = {{The White House}},
 year = {5/13/2021},
 title = {Executive Order on Improving the Nation's Cybersecurity},
 url = {https://www.whitehouse.gov/briefing-room/presidential-actions/2021/05/12/executive-order-on-improving-the-nations-cybersecurity/},
 urldate = {05.08.2022},
 journal = {The White House},
 file = {House 5 13 2021 - Executive Order on Improving:Attachments/House 5 13 2021 - Executive Order on Improving.pdf:application/pdf}
}


@misc{NTIASBOM,
 year = {12.07.2021},
 title = {The Minimum Elements for a Software Bill of Materials (SBOM)},
 url = {https://www.ntia.gov/files/ntia/publications/sbom_minimum_elements_report.pdf},
 urldate = {05.08.2022},
 author = {{The United States Department of Commerce}},
 file = {sbom{\_}minimum{\_}elements{\_}report:Attachments/sbom{\_}minimum{\_}elements{\_}report.pdf:application/pdf}
}


@misc{OWASPSCVS,
 author = {{Steve Springett}},
 year = {2020},
 title = {Software Component Verification Standard},
 url = {https://owasp-scvs.gitbook.io/scvs/},
 urldate = {05.08.2022}
}


@misc{OWASPWebsite,
 abstract = {OWASP CycloneDX is a lightweight software bill of materials (SBOM) standard designed for use in application security contexts and supply chain component analysis.},
 author = {{Open Web Security Project Foundation}},
 year = {05.08.2022},
 title = {OWASP CycloneDX Software Bill of Materials (SBOM) Standard},
 url = {https://cyclonedx.org/},
 urldate = {05.08.2022}
}


@misc{SPDXExamples,
 abstract = {Examples of SPDX files for software combinations. Contribute to spdx/spdx-examples development by creating an account on GitHub.},
 author = {SPDX},
 year = {10.08.2022},
 title = {Examples of SPDX files for software combinations},
 url = {https://github.com/spdx/spdx-examples},
 urldate = {10.08.2022}
}


@misc{SPDXISO,
 year = {08.2022},
 title = {Information technology --- SPDX Specification V2.2.1},
 url = {https://www.iso.org/standard/81870.html},
 urldate = {10.08.2022},
 author = {{International Organisation for Standardization}}
}


@misc{SPDXSpec,
 author = {{The Linux Foundation}},
 title = {Software Package Data Exchange (SPDX) Specification},
 url = {https://spdx.dev/wp-content/uploads/sites/41/2020/08/SPDX-specification-2-2.pdf},
 urldate = {09.08.2022},
 file = {Software Package Data Exchange (SPDX{\circledR}):Attachments/Software Package Data Exchange (SPDX{\circledR}).pdf:application/pdf}
}


@misc{SPDXWebsite,
 author = {{Software Package Data Exchange}},
 year = {28.10.2021},
 title = {Software Package Data Exchange (SPDX)},
 url = {https://spdx.dev/},
 urldate = {09.08.2022}
}


